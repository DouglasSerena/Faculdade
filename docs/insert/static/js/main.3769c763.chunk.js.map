{"version":3,"sources":["components/Header/index.tsx","GlobalStyle.ts","pages/Landing/style.ts","utils/class-name.ts","components/Field/Input/index.tsx","components/Field/Label/index.tsx","components/Field/Select/index.tsx","components/Field/Textarea/index.tsx","components/Field/index.tsx","constants/datatype.ts","pages/Landing/Fields/style.ts","pages/Landing/Fields/index.tsx","pages/Landing/index.tsx","App.tsx","index.tsx"],"names":["Header","className","GlobalStyle","createGlobalStyle","Style","Container","styled","div","attrs","classNames","names","reduce","name","Array","isArray","concat","Object","entries","prev","key","push","join","Input","forwardRef","ref","rest","type","Label","children","Select","assign","Group","Option","Textarea","DATATYPE","group","values","ContainerEmpty","List","ul","ListItem","li","Fields","register","control","useFieldArray","fields","append","remove","handleAppend","useCallback","data","handleRemove","index","length","src","alt","onClick","size","map","field","required","value","label","defaultValue","Landing","useForm","mode","getValues","isValid","formState","useState","SQL","setSQL","disabled","props","keys","datas","from","_","faker","datatype","number","fake","replace","handleGenerator","height","defaultLanguage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJAceA,EAZI,WACjB,OACE,wBAAQC,UAAU,OAAlB,SACE,qBAAKA,UAAU,+BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAMA,UAAU,eAAhB,sC,cCLGC,EAAcC,YAAH,uS,OCIXC,EAAQ,CACnBC,UAAWC,IAAOC,IAAIC,OAJX,iBAAO,CAAEP,UAAW,eAIpBK,CAAF,8G,sBCPJ,SAASG,IAEb,IAAD,uBADGA,EACH,yBADGA,EACH,gBACA,IAAIC,EAAQD,EAAWE,QAAO,SAACD,EAAcE,GAC3C,MAAoB,kBAATA,GAAqBC,MAAMC,QAAQF,GACrCF,EAAMK,OAAOH,GAEF,kBAATA,EACFF,EAAMK,OACXC,OAAOC,QAAQL,GAAMD,QAAO,SAACO,EAAD,GAAyB,IAAD,mBAAhBC,EAAgB,KAIlD,OAJkD,MAEhDD,EAAKE,KAAKD,GAELD,IACN,KAGAR,IACN,IAEH,OAAOA,EAAMW,KAAK,KCfpB,I,QAWeC,EAXgBC,sBAAW,WAAcC,GAAS,IAAjBC,EAAgB,oBAC9D,OACE,iDACMA,GADN,IAEEC,KAAK,OACLF,IAAKA,EACLvB,UAAWQ,EAAW,eAAgBgB,EAAKxB,iBCElC0B,EARgB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaH,EAAW,4BACxD,OACE,iDAAWA,GAAX,IAAiBxB,UAAWQ,EAAW,aAAcgB,EAAKxB,WAA1D,SACG2B,MCEDC,EAA2BN,sBAAW,WAAwBC,GAAS,IAA9BI,EAA6B,EAA7BA,SAAaH,EAAgB,4BAC1E,OACE,kDACMA,GADN,IAEED,IAAKA,EACLvB,UAAWQ,EAAW,cAAegB,EAAKxB,WAH5C,SAKG2B,QAiBQZ,SAAOc,OAAOD,EAAQ,CACnCE,MAXmC,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,SAAaH,EAAW,4BAC9D,OAAO,oDAAcA,GAAd,aAAqBG,MAW5BI,OAN+B,SAAC,GAA2B,IAAzBJ,EAAwB,EAAxBA,SAAaH,EAAW,4BAC1D,OAAO,kDAAYA,GAAZ,aAAmBG,QCZbK,EAdsBV,sBACnC,WAAwBC,GAAS,IAA9BI,EAA6B,EAA7BA,SAAaH,EAAgB,4BAC9B,OACE,oDACMA,GADN,IAEED,IAAKA,EACLvB,UAAWQ,EAAW,eAAgBgB,EAAKxB,WAH7C,SAKG2B,QCKMZ,SAAOc,QARO,SAAC,GAA2B,IAAzBF,EAAwB,EAAxBA,SAAaH,EAAW,4BACtD,OACE,+CAASA,GAAT,IAAexB,UAAWQ,EAAWgB,EAAKxB,WAA1C,SACG2B,OAK6B,CAClCN,MAAOA,EACPK,MAAOA,EACPE,OAAQA,EACRI,SAAUA,ICtBCC,EAAW,CACtB,CACEC,MAAO,UACPC,OAAQ,CACN,UACA,iBACA,OACA,aACA,aACA,WACA,aACA,gBACA,eACA,eACA,mBACA,SACA,UACA,cACA,QACA,YACA,WACA,YACA,YACA,oBACA,mBACA,sBACA,aAGJ,CACED,MAAO,SACPC,OAAQ,CACN,MACA,MACA,QACA,OACA,OACA,WACA,QACA,OACA,MACA,OACA,aACA,SACA,SACA,SAGJ,CACED,MAAO,WACPC,OAAQ,CACN,QACA,aACA,cACA,QACA,mBACA,kBACA,UACA,uBAGJ,CACED,MAAO,UACPC,OAAQ,CACN,WACA,cACA,gBACA,cACA,KACA,uBACA,wBACA,kBACA,cACA,SACA,WAGJ,CACED,MAAO,WACPC,OAAQ,CAAC,SAAU,OAAQ,YAAa,WAE1C,CACED,MAAO,WACPC,OAAQ,CACN,SACA,QACA,WACA,SACA,OACA,UACA,cACA,OACA,UAGJ,CACED,MAAO,OACPC,OAAQ,CACN,OACA,SACA,UACA,WACA,SACA,OACA,QACA,YAGJ,CACED,MAAO,UACPC,OAAQ,CACN,UACA,cACA,gBACA,OACA,SACA,kBACA,eACA,eACA,iBACA,iBACA,kBACA,mBACA,gBACA,kBACA,OACA,MACA,2BAGJ,CACED,MAAO,MACPC,OAAQ,CAAC,SAAU,cAAe,gBAAiB,YAAa,aAElE,CACED,MAAO,SACPC,OAAQ,CAAC,eAAgB,YAAa,OAAQ,OAAQ,UAAW,WAEnE,CACED,MAAO,UACPC,OAAQ,CACN,YACA,UACA,0BACA,iBACA,2BACA,eACA,yBACA,UACA,WACA,aACA,iBACA,WACA,sBAGJ,CACED,MAAO,QACPC,OAAQ,CACN,QACA,SACA,WACA,WACA,UACA,WACA,OACA,OACA,OACA,YACA,UACA,SACA,SACA,SACA,WACA,YACA,UACA,aACA,WACA,gBAGJ,CACED,MAAO,WACPC,OAAQ,CACN,SACA,QACA,eACA,WACA,WACA,aACA,MACA,aACA,eACA,aACA,KACA,OACA,OACA,YACA,QACA,MACA,aAGJ,CACED,MAAO,QACPC,OAAQ,CACN,OACA,QACA,WACA,OACA,YACA,YACA,aACA,OACA,UAGJ,CACED,MAAO,WACPC,OAAQ,CAAC,OAAQ,OAAQ,eAE3B,CACED,MAAO,QACPC,OAAQ,CAAC,UAEX,CACED,MAAO,OACPC,OAAQ,CACN,YACA,WACA,aACA,WACA,WACA,SACA,SACA,SACA,QACA,gBACA,UACA,YAGJ,CACED,MAAO,QACPC,OAAQ,CAAC,cAAe,oBAAqB,iBAE/C,CACED,MAAO,SACPC,OAAQ,CACN,SACA,QACA,eACA,gBACA,gBACA,OACA,UACA,OACA,QACA,QACA,SACA,QACA,eACA,gBAGJ,CACED,MAAO,SACPC,OAAQ,CACN,WACA,iBACA,WACA,iBACA,gBACA,WACA,UACA,gBACA,WACA,WAGJ,CACED,MAAO,OACPC,OAAQ,CAAC,WAEX,CACED,MAAO,UACPC,OAAQ,CACN,UACA,eACA,QACA,OACA,OACA,MACA,QACA,MACA,aCrSOhC,EAAQ,CACnBC,UAAWC,IAAOC,IAAT,0EAIT8B,eAAgB/B,IAAOC,IAAT,wTAkBd+B,KAAMhC,IAAOiC,GAAT,sEAIJC,SAAUlC,IAAOmC,GAAT,+E,QCqGKC,EAjHkB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACvBC,YAAc,CAC/CjC,KAAM,SACNgC,QAASA,IAFHE,EADkD,EAClDA,OAAQC,EAD0C,EAC1CA,OAAQC,EADkC,EAClCA,OAKlBC,EAAeC,uBAAY,WAC/BH,EAAO,CAAEnC,KAAM,GAAIuC,KAAM,GAAIzB,KAAM,aAClC,CAACqB,IAEEK,EAAeF,uBACnB,SAACG,GACCL,EAAOK,KAET,CAACL,IAGH,OACE,cAA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","file":"static/js/main.3769c763.chunk.js","sourcesContent":["import { FC } from \"react\";\r\n\r\nconst Header: FC = () => {\r\n  return (\r\n    <header className=\"mb-3\">\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <span className=\"navbar-brand\">Gerador de INSERT</span>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body, #root {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    overflow-x: hidden;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .btn {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    min-height: 38px;\r\n    min-width: 38px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst classNames = {\r\n  Container: () => ({ className: \"container\" }),\r\n};\r\n\r\nexport const Style = {\r\n  Container: styled.div.attrs(classNames.Container)`\r\n    section {\r\n      margin-top: 20px;\r\n      border: 1px solid #3333;\r\n    }\r\n  `,\r\n};\r\n","export function classNames(\r\n  ...classNames: (string | undefined | { [key: string]: any } | string[])[]\r\n) {\r\n  let names = classNames.reduce((names: any[], name) => {\r\n    if (typeof name === \"string\" || Array.isArray(name)) {\r\n      return names.concat(name);\r\n    }\r\n    if (typeof name === \"object\") {\r\n      return names.concat(\r\n        Object.entries(name).reduce((prev, [key, value]) => {\r\n          if (!!value) {\r\n            prev.push(key);\r\n          }\r\n          return prev;\r\n        }, [] as string[])\r\n      );\r\n    }\r\n    return names;\r\n  }, [] as string[]);\r\n\r\n  return names.join(\" \");\r\n}\r\n","import { FC, forwardRef, InputHTMLAttributes } from \"react\";\r\nimport { classNames } from \"../../../utils/class-name\";\r\n\r\ninterface IInputProps extends InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input: FC<IInputProps> = forwardRef(({ ...rest }, ref) => {\r\n  return (\r\n    <input\r\n      {...rest}\r\n      type=\"text\"\r\n      ref={ref as any}\r\n      className={classNames(\"form-control\", rest.className)}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import { FC, LabelHTMLAttributes } from \"react\";\r\nimport { classNames } from \"../../../utils/class-name\";\r\n\r\ninterface ILabelProps extends LabelHTMLAttributes<HTMLLabelElement> {}\r\n\r\nconst Label: FC<ILabelProps> = ({ children, ...rest }) => {\r\n  return (\r\n    <label {...rest} className={classNames(\"form-label\", rest.className)}>\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import {\r\n  FC,\r\n  forwardRef,\r\n  OptionHTMLAttributes,\r\n  SelectHTMLAttributes,\r\n} from \"react\";\r\nimport { classNames } from \"../../../utils/class-name\";\r\n\r\ninterface ISelectProps extends SelectHTMLAttributes<HTMLSelectElement> {}\r\n\r\nconst Select: FC<ISelectProps> = forwardRef(({ children, ...rest }, ref) => {\r\n  return (\r\n    <select\r\n      {...rest}\r\n      ref={ref as any}\r\n      className={classNames(\"form-select\", rest.className)}\r\n    >\r\n      {children}\r\n    </select>\r\n  );\r\n});\r\n\r\ninterface IOptionGroupProps extends OptionHTMLAttributes<HTMLOptGroupElement> {}\r\n\r\nconst Group: FC<IOptionGroupProps> = ({ children, ...rest }) => {\r\n  return <optgroup {...rest}>{children}</optgroup>;\r\n};\r\n\r\ninterface IOptionProps extends OptionHTMLAttributes<HTMLOptionElement> {}\r\n\r\nconst Option: FC<IOptionProps> = ({ children, ...rest }) => {\r\n  return <option {...rest}>{children}</option>;\r\n};\r\n\r\nexport default Object.assign(Select, {\r\n  Group: Group,\r\n  Option: Option,\r\n});\r\n","import { FC, forwardRef, TextareaHTMLAttributes } from \"react\";\r\nimport { classNames } from \"../../../utils/class-name\";\r\n\r\ninterface ITextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea: FC<ITextareaProps> = forwardRef(\r\n  ({ children, ...rest }, ref) => {\r\n    return (\r\n      <textarea\r\n        {...rest}\r\n        ref={ref as any}\r\n        className={classNames(\"form-control\", rest.className)}\r\n      >\r\n        {children}\r\n      </textarea>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Textarea;\r\n","import { FC, HTMLAttributes } from \"react\";\r\nimport { classNames } from \"../../utils/class-name\";\r\n\r\nimport Input from \"./Input\";\r\nimport Label from \"./Label\";\r\nimport Select from \"./Select\";\r\nimport Textarea from \"./Textarea\";\r\n\r\ninterface IDivProps extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nconst Field: FC<IDivProps> = ({ children, ...rest }) => {\r\n  return (\r\n    <div {...rest} className={classNames(rest.className)}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Object.assign(Field, {\r\n  Input: Input,\r\n  Label: Label,\r\n  Select: Select,\r\n  Textarea: Textarea,\r\n});\r\n","export const DATATYPE = [\r\n  {\r\n    group: \"address\",\r\n    values: [\r\n      \"zipCode\",\r\n      \"zipCodeByState\",\r\n      \"city\",\r\n      \"cityPrefix\",\r\n      \"citySuffix\",\r\n      \"cityName\",\r\n      \"streetName\",\r\n      \"streetAddress\",\r\n      \"streetSuffix\",\r\n      \"streetPrefix\",\r\n      \"secondaryAddress\",\r\n      \"county\",\r\n      \"country\",\r\n      \"countryCode\",\r\n      \"state\",\r\n      \"stateAbbr\",\r\n      \"latitude\",\r\n      \"longitude\",\r\n      \"direction\",\r\n      \"cardinalDirection\",\r\n      \"ordinalDirection\",\r\n      \"nearbyGPSCoordinate\",\r\n      \"timeZone\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"animal\",\r\n    values: [\r\n      \"dog\",\r\n      \"cat\",\r\n      \"snake\",\r\n      \"bear\",\r\n      \"lion\",\r\n      \"cetacean\",\r\n      \"horse\",\r\n      \"bird\",\r\n      \"cow\",\r\n      \"fish\",\r\n      \"crocodilia\",\r\n      \"insect\",\r\n      \"rabbit\",\r\n      \"type\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"commerce\",\r\n    values: [\r\n      \"color\",\r\n      \"department\",\r\n      \"productName\",\r\n      \"price\",\r\n      \"productAdjective\",\r\n      \"productMaterial\",\r\n      \"product\",\r\n      \"productDescription\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"company\",\r\n    values: [\r\n      \"suffixes\",\r\n      \"companyName\",\r\n      \"companySuffix\",\r\n      \"catchPhrase\",\r\n      \"bs\",\r\n      \"catchPhraseAdjective\",\r\n      \"catchPhraseDescriptor\",\r\n      \"catchPhraseNoun\",\r\n      \"bsAdjective\",\r\n      \"bsBuzz\",\r\n      \"bsNoun\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"database\",\r\n    values: [\"column\", \"type\", \"collation\", \"engine\"],\r\n  },\r\n  {\r\n    group: \"datatype\",\r\n    values: [\r\n      \"number\",\r\n      \"float\",\r\n      \"datetime\",\r\n      \"string\",\r\n      \"uuid\",\r\n      \"boolean\",\r\n      \"hexaDecimal\",\r\n      \"json\",\r\n      \"array\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"date\",\r\n    values: [\r\n      \"past\",\r\n      \"future\",\r\n      \"between\",\r\n      \"betweens\",\r\n      \"recent\",\r\n      \"soon\",\r\n      \"month\",\r\n      \"weekday\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"finance\",\r\n    values: [\r\n      \"account\",\r\n      \"accountName\",\r\n      \"routingNumber\",\r\n      \"mask\",\r\n      \"amount\",\r\n      \"transactionType\",\r\n      \"currencyCode\",\r\n      \"currencyName\",\r\n      \"currencySymbol\",\r\n      \"bitcoinAddress\",\r\n      \"litecoinAddress\",\r\n      \"creditCardNumber\",\r\n      \"creditCardCVV\",\r\n      \"ethereumAddress\",\r\n      \"iban\",\r\n      \"bic\",\r\n      \"transactionDescription\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"git\",\r\n    values: [\"branch\", \"commitEntry\", \"commitMessage\", \"commitSha\", \"shortSha\"],\r\n  },\r\n  {\r\n    group: \"hacker\",\r\n    values: [\"abbreviation\", \"adjective\", \"noun\", \"verb\", \"ingverb\", \"phrase\"],\r\n  },\r\n  {\r\n    group: \"helpers\",\r\n    values: [\r\n      \"randomize\",\r\n      \"slugify\",\r\n      \"replaceSymbolWithNumber\",\r\n      \"replaceSymbols\",\r\n      \"replaceCreditCardSymbols\",\r\n      \"repeatString\",\r\n      \"regexpStyleStringParse\",\r\n      \"shuffle\",\r\n      \"mustache\",\r\n      \"createCard\",\r\n      \"contextualCard\",\r\n      \"userCard\",\r\n      \"createTransaction\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"image\",\r\n    values: [\r\n      \"image\",\r\n      \"avatar\",\r\n      \"imageUrl\",\r\n      \"abstract\",\r\n      \"animals\",\r\n      \"business\",\r\n      \"cats\",\r\n      \"city\",\r\n      \"food\",\r\n      \"nightlife\",\r\n      \"fashion\",\r\n      \"people\",\r\n      \"nature\",\r\n      \"sports\",\r\n      \"technics\",\r\n      \"transport\",\r\n      \"dataUri\",\r\n      \"lorempixel\",\r\n      \"unsplash\",\r\n      \"lorempicsum\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"internet\",\r\n    values: [\r\n      \"avatar\",\r\n      \"email\",\r\n      \"exampleEmail\",\r\n      \"userName\",\r\n      \"protocol\",\r\n      \"httpMethod\",\r\n      \"url\",\r\n      \"domainName\",\r\n      \"domainSuffix\",\r\n      \"domainWord\",\r\n      \"ip\",\r\n      \"ipv6\",\r\n      \"port\",\r\n      \"userAgent\",\r\n      \"color\",\r\n      \"mac\",\r\n      \"password\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"lorem\",\r\n    values: [\r\n      \"word\",\r\n      \"words\",\r\n      \"sentence\",\r\n      \"slug\",\r\n      \"sentences\",\r\n      \"paragraph\",\r\n      \"paragraphs\",\r\n      \"text\",\r\n      \"lines\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"mersenne\",\r\n    values: [\"rand\", \"seed\", \"seed_array\"],\r\n  },\r\n  {\r\n    group: \"music\",\r\n    values: [\"genre\"],\r\n  },\r\n  {\r\n    group: \"name\",\r\n    values: [\r\n      \"firstName\",\r\n      \"lastName\",\r\n      \"middleName\",\r\n      \"findName\",\r\n      \"jobTitle\",\r\n      \"gender\",\r\n      \"prefix\",\r\n      \"suffix\",\r\n      \"title\",\r\n      \"jobDescriptor\",\r\n      \"jobArea\",\r\n      \"jobType\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"phone\",\r\n    values: [\"phoneNumber\", \"phoneNumberFormat\", \"phoneFormats\"],\r\n  },\r\n  {\r\n    group: \"random\",\r\n    values: [\r\n      \"number\",\r\n      \"float\",\r\n      \"arrayElement\",\r\n      \"arrayElements\",\r\n      \"objectElement\",\r\n      \"uuid\",\r\n      \"boolean\",\r\n      \"word\",\r\n      \"words\",\r\n      \"image\",\r\n      \"locale\",\r\n      \"alpha\",\r\n      \"alphaNumeric\",\r\n      \"hexaDecimal\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"system\",\r\n    values: [\r\n      \"fileName\",\r\n      \"commonFileName\",\r\n      \"mimeType\",\r\n      \"commonFileType\",\r\n      \"commonFileExt\",\r\n      \"fileType\",\r\n      \"fileExt\",\r\n      \"directoryPath\",\r\n      \"filePath\",\r\n      \"semver\",\r\n    ],\r\n  },\r\n  {\r\n    group: \"time\",\r\n    values: [\"recent\"],\r\n  },\r\n  {\r\n    group: \"vehicle\",\r\n    values: [\r\n      \"vehicle\",\r\n      \"manufacturer\",\r\n      \"model\",\r\n      \"type\",\r\n      \"fuel\",\r\n      \"vin\",\r\n      \"color\",\r\n      \"vrm\",\r\n      \"bicycle\",\r\n    ],\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const Style = {\r\n  Container: styled.div`\r\n    min-height: 30vh;\r\n    margin: 20px 0;\r\n  `,\r\n  ContainerEmpty: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    & > img {\r\n      width: 150px;\r\n      height: 150px;\r\n    }\r\n    & > h5 {\r\n      margin-top: 15px;\r\n    }\r\n    & > p {\r\n      width: 400px;\r\n      text-align: center;\r\n      line-height: 20px;\r\n    }\r\n  `,\r\n  List: styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n  `,\r\n  ListItem: styled.li`\r\n    display: flex;\r\n    align-items: flex-end;\r\n  `,\r\n};\r\n","import { FC, useCallback } from \"react\";\r\nimport {\r\n  Control,\r\n  FieldValues,\r\n  useFieldArray,\r\n  UseFormRegister,\r\n} from \"react-hook-form\";\r\nimport Field from \"../../../components/Field\";\r\nimport { DATATYPE } from \"../../../constants/datatype\";\r\nimport { Style } from \"./style\";\r\nimport { MdAdd, MdDelete } from \"react-icons/md\";\r\n\r\ninterface IFieldsProps {\r\n  register: UseFormRegister<FieldValues>;\r\n  control: Control<FieldValues, object>;\r\n}\r\n\r\nconst Fields: FC<IFieldsProps> = ({ register, control }) => {\r\n  const { fields, append, remove } = useFieldArray({\r\n    name: \"fields\",\r\n    control: control,\r\n  });\r\n\r\n  const handleAppend = useCallback(() => {\r\n    append({ name: \"\", data: \"\", type: \"string\" });\r\n  }, [append]);\r\n\r\n  const handleRemove = useCallback(\r\n    (index) => {\r\n      remove(index);\r\n    },\r\n    [remove]\r\n  );\r\n\r\n  return (\r\n    <Style.Container>\r\n      {fields.length === 0 ? (\r\n        <Style.ContainerEmpty>\r\n          <img src=\"/assets/undraw_no_data.svg\" alt=\"no data\" />\r\n          <h5>Opps!!</h5>\r\n          <p>\r\n            Para conseguir gerar um insert valido você deve adicionar uma coluna\r\n          </p>\r\n\r\n          <button\r\n            onClick={() => handleAppend()}\r\n            type=\"button\"\r\n            className=\"btn btn-outline-primary\"\r\n          >\r\n            <MdAdd size={20} /> coluna\r\n          </button>\r\n        </Style.ContainerEmpty>\r\n      ) : (\r\n        <>\r\n          <Style.List>\r\n            {fields.map((field, index) => (\r\n              <Style.ListItem key={index}>\r\n                <Field className=\"w-100\">\r\n                  <Field.Label>Name</Field.Label>\r\n                  <Field.Input\r\n                    {...register(`fields.${index}.name`, { required: true })}\r\n                  />\r\n                </Field>\r\n\r\n                <Field className=\"w-100 mx-2\">\r\n                  <Field.Label>Data</Field.Label>\r\n                  <Field.Select\r\n                    {...register(`fields.${index}.data`, { required: true })}\r\n                  >\r\n                    <Field.Select.Option value=\"foreignKey\">\r\n                      Foreign key\r\n                    </Field.Select.Option>\r\n                    {DATATYPE.map(({ group, values }, index) => (\r\n                      <Field.Select.Group key={index} label={group}>\r\n                        {values.map((value, index) => (\r\n                          <Field.Select.Option\r\n                            key={index}\r\n                            value={`${group}.${value}`}\r\n                          >\r\n                            {value}\r\n                          </Field.Select.Option>\r\n                        ))}\r\n                      </Field.Select.Group>\r\n                    ))}\r\n                  </Field.Select>\r\n                </Field>\r\n\r\n                <Field className=\"w-100 mx-2\">\r\n                  <Field.Label>Type</Field.Label>\r\n                  <Field.Select\r\n                    {...register(`fields.${index}.type`, { required: true })}\r\n                  >\r\n                    <Field.Select.Option defaultValue=\"string\">\r\n                      string\r\n                    </Field.Select.Option>\r\n                    <Field.Select.Option defaultValue=\"number\">\r\n                      number\r\n                    </Field.Select.Option>\r\n                    <Field.Select.Option defaultValue=\"boolean\">\r\n                      boolean\r\n                    </Field.Select.Option>\r\n                  </Field.Select>\r\n                </Field>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-danger\"\r\n                  onClick={() => handleRemove(index)}\r\n                >\r\n                  <MdDelete size={20} />\r\n                </button>\r\n              </Style.ListItem>\r\n            ))}\r\n          </Style.List>\r\n\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => handleAppend()}\r\n              className=\"btn btn-outline-primary\"\r\n            >\r\n              <MdAdd size={20} /> coluna\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Style.Container>\r\n  );\r\n};\r\n\r\nexport default Fields;\r\n","import { Style } from \"./style\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Fields from \"./Fields\";\r\nimport faker from \"faker\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { useState } from \"react\";\r\nimport { MdDriveFileRenameOutline } from \"react-icons/md\";\r\n\r\nexport default function Landing() {\r\n  const {\r\n    control,\r\n    register,\r\n    getValues,\r\n    formState: { isValid },\r\n  } = useForm({ mode: \"all\" });\r\n  const [SQL, setSQL] = useState<string>(\r\n    'INSERT INTO clients (\"name\") VALUES (\"carlos\")'\r\n  );\r\n\r\n  const handleGenerator = () => {\r\n    let { keys, datas } = getValues(\"fields\").reduce(\r\n      (props: any, field: any) => {\r\n        props.keys.push(`\"${field.name}\"`);\r\n        props.datas.push({ data: `{{${field.data}}}`, type: field.type });\r\n        return props;\r\n      },\r\n      { keys: [], datas: [] } as {\r\n        keys: string[];\r\n        datas: { data: string; type: string }[];\r\n      }\r\n    );\r\n\r\n    let values = Array.from({ length: 100 }).map((_) => {\r\n      const values = datas\r\n        .map(({ data, type }: any) => {\r\n          let value: string;\r\n          if (data === \"{{foreignKey}}\") {\r\n            value = `${faker.datatype.number(100)}`;\r\n            if (value === \"0\") {\r\n              value = \"1\";\r\n            }\r\n          } else {\r\n            value = faker.fake(data);\r\n          }\r\n\r\n          if (type === \"string\") {\r\n            return `\"${value.replace('\"', \"'\")}\"`;\r\n          }\r\n\r\n          return value;\r\n        })\r\n        .join(\", \");\r\n\r\n      return `(${values})`;\r\n    });\r\n\r\n    setSQL(\r\n      `INSERT INTO {{TABLE}} (${keys.join(\",\")})\\n\\tVALUES\\n\\t\\t${values.join(\r\n        \",\\n\\t\\t\"\r\n      )};`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Style.Container>\r\n      <Fields register={register} control={control} />\r\n\r\n      <div className=\"d-flex mt-3\">\r\n        <button\r\n          type=\"button\"\r\n          disabled={!isValid}\r\n          className=\"btn btn-outline-success w-100 mx-1\"\r\n          onClick={() => handleGenerator()}\r\n        >\r\n          <MdDriveFileRenameOutline size={20} /> Gerar insert\r\n        </button>\r\n      </div>\r\n\r\n      <Editor value={SQL} height=\"50vh\" defaultLanguage=\"sql\" />\r\n    </Style.Container>\r\n  );\r\n}\r\n","import Header from \"./components/Header\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport Landing from \"./pages/Landing\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      <Landing />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}